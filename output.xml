<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.8.10 on linux)" generated="20231019 18:16:36.699" rpa="false" schemaversion="4">
<suite id="s1" name="flowerApk" source="/home/valentin.mihalache/Downloads/flowerApk">
<suite id="s1-s1" name="Test" source="/home/valentin.mihalache/Downloads/flowerApk/test.robot">
<kw name="Set Library Search Order" library="BuiltIn" type="SETUP">
<arg>AppiumLibrary</arg>
<arg>SeleniumLibrary</arg>
<arg>Collections</arg>
<arg>XML</arg>
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<status status="PASS" starttime="20231019 18:16:36.865" endtime="20231019 18:16:36.866"/>
</kw>
<test id="s1-s1-t1" name="Add flower" line="31">
<kw name="Open flower APK" library="android.res">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://127.0.0.1:4723</arg>
<arg>automationName=UIAutomator2</arg>
<arg>platformName=Android</arg>
<arg>app=/home/valentin.mihalache/StudioProjects/sunflower/app/build/outputs/apk/debug/app-debug.apk</arg>
<arg>appPackage=com.google.samples.apps.sunflower</arg>
<arg>appActivity=com.google.samples.apps.sunflower.GardenActivity</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20231019 18:16:36.867" endtime="20231019 18:16:44.307"/>
</kw>
<status status="PASS" starttime="20231019 18:16:36.867" endtime="20231019 18:16:44.307"/>
</kw>
<kw name="Add a flower to my garden" library="android.res">
<arg>2</arg>
<kw name="Click on my Plantlist" library="android.res">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${plantList-Open-Button}</arg>
<arg>15</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20231019 18:16:46.189" level="INFO">xpath criteria: //android.view.View[@content-desc="Plant list"]</msg>
<status status="PASS" starttime="20231019 18:16:44.308" endtime="20231019 18:16:46.190"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${plantList-Open-Button}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20231019 18:16:46.192" level="INFO">Clicking element '//android.view.View[@content-desc="Plant list"]'.</msg>
<msg timestamp="20231019 18:16:47.323" level="INFO">xpath criteria: //android.view.View[@content-desc="Plant list"]</msg>
<status status="PASS" starttime="20231019 18:16:46.190" endtime="20231019 18:16:47.323"/>
</kw>
<status status="PASS" starttime="20231019 18:16:44.307" endtime="20231019 18:16:47.323"/>
</kw>
<kw name="Click on a plant" library="android.res">
<arg>${idOfPlant}</arg>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>xpath=(//android.view.View[@content-desc="Picture of plant"])[${idOfPlant}]</arg>
<arg>20</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20231019 18:16:57.528" level="INFO">xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]
xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]</msg>
<status status="PASS" starttime="20231019 18:16:47.324" endtime="20231019 18:16:57.528"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>xpath=(//android.view.View[@content-desc="Picture of plant"])[${idOfPlant}]</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20231019 18:16:57.530" level="INFO">Clicking element 'xpath=(//android.view.View[@content-desc="Picture of plant"])[2]'.</msg>
<msg timestamp="20231019 18:16:58.925" level="INFO">xpath criteria: (//android.view.View[@content-desc="Picture of plant"])[2]</msg>
<status status="PASS" starttime="20231019 18:16:57.528" endtime="20231019 18:16:58.925"/>
</kw>
<status status="PASS" starttime="20231019 18:16:47.323" endtime="20231019 18:16:58.925"/>
</kw>
<status status="PASS" starttime="20231019 18:16:44.307" endtime="20231019 18:16:58.926"/>
</kw>
<status status="PASS" starttime="20231019 18:16:36.866" endtime="20231019 18:16:58.926"/>
</test>
<status status="PASS" starttime="20231019 18:16:36.723" endtime="20231019 18:16:58.928"/>
</suite>
<status status="PASS" starttime="20231019 18:16:36.700" endtime="20231019 18:16:58.930"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="flowerApk">flowerApk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">flowerApk.Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
